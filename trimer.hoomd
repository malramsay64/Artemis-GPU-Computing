#!/usr/bin/env python
""" This is a sample python module to set up a hoomd simulation containing
Mickey Mouse like trimer molecules.
"""

import numpy as np
# Import all the hoomd functions and classes
from hoomd_script import *

# This sets up the processing configuration of the simulation i.e. the
# gpus to use, whether to use gpus etc.
context.initialize()

# Initialise the system reading in an xml file containing all the
# positions of particles, the rigid body they belong to, their mass
# as well as all the box configurations.
system = init.read_xml(filename="trimer.xml", time_step=0)

# This is a 2D simulation so we are restriciting the positions to 0
# in the z direction. This takes into account any roundoff errors.
update.enforce2d()

# Define a lennard jones potential along with the interaction
# parameters for each type of particle.
potentials = pair.lj(r_cut=2.5)
potentials.pair_coeff.set('1', '1', epsilon=1, sigma=2)
potentials.pair_coeff.set('2', '2', epsilon=1, sigma=0.637556*2)
potentials.pair_coeff.set('1', '2', epsilon=1, sigma=1.637556)

# Initialising some analysers to enable the querying of thermodynamic
# properties
thermo = analyze.log(filename=None,\
                     quantities=['temperature', 'pressure'],\
                     period=100
                    )

# Send snapshots to VMD in real time using port 54321 sending snapshots
# every 100 timesteps (approx 20 per second on artemis)
analyze.imd(port=54321, rate=100)

# The integration mode and timestep.
# integrate.mode_standard is needed before specifying and npt,
# nvt, or similar integration.
integrate.mode_standard(dt=0.005)

# Setting up the npt_rigid integrator, for some reason this equilibrates
# to a pressure approximately 2.2 times the target pressure.
temp = 2.00
press = 13.5
# Not sure why but it works
press /= 2.2
integrate.npt_rigid(group=group.all(), T=temp, tau=1, P=press, tauP=1)

# Run the simulation
run(1000)

